version: '3.4'

services:
    workerservice.worker:
        image: ${DOCKER_REGISTRY-}workerserviceworker
        restart: unless-stopped
        environment:
            - ASPNETCORE_URLS=https://+:443;http://+:80
            - ASPNETCORE_ENVIRONMENT=Development
            - JaegerOptions__SamplingEndpoint=http://jaeger:5778
            - JaegerOptions__Endpoint=http://jaeger:14268/api/traces
            - AWS_ACCESS_KEY_ID=guest
            - AWS_SECRET_ACCESS_KEY=guest
            - AWS_DEFAULT_REGION=us-east-1
            - MessageQueueOptions__ServiceURL=http://localstack:4566
            - MessageQueueOptions__Region=us-east-1
            - MessageQueueOptions__GroupId=WorkerService
            - MessageQueueOptions__WaitTimeSeconds=1
            - MessageQueueOptions__VisibilityTimeout=1
            - MessageQueueOptions__EnableFifo=true
            - MessageQueueOptions__RequestDelaySeconds=2
#if (!nodatabase)
            - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=postgres;User Id=admin;Password=password;
#endif
        build:
            context: .
            dockerfile: WorkerService.Worker/Dockerfile
        ports:
            - "5001:443"
            - "5000:80"
        volumes:
            - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
            - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro